start = expression

num = [0-9]+

string = [a-zA-Z_?!+\-=@#$%^&*/][0-9a-zA-Z_?!+\-=@#$%^&*/.]*

/*20 for space, 09 for table, 0a for newline, 0d for return*/
/*why couldn't use [\b\t\n\r] here??*/
ignored = [\x20\x09\x0a\x0d]

atom = 
	num:num
	{
		/* TODO: if 0, it's not a array, then you can't use join! 
		 *	     currently code is ugly! CHANGE IT!
		 * */
	//	if(num == 0) return 0;
		return parseInt(num.join(""));
	}
  / string:string
    { 
		return string.join(""); 
	}

space_atom = ignored* first:atom ignored*
    {
        return first;
    }

expression =
    ignored* "(" first:expression+ ")" ignored*
    {
        return first;
    }
  /  "'" first:expression
    {
        return ["quote", first];
    }  
  / first:space_atom
    {
        return first;
    }
